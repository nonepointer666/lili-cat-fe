{"version":3,"file":"index.js","sources":["pages/chat/index.uvue","../../dev-tools/HBuilderX.4.45.2025010502/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY2hhdC9pbmRleC51dnVl"],"sourcesContent":["<template>\r\n  <view class=\"chat-container\">\r\n    <!-- 聊天记录 -->\r\n    <scroll-view class=\"chat-list\" scroll-y=\"true\">\r\n      <view v-for=\"(item, index) in chatList\" :key=\"index\" class=\"chat-item\">\r\n        <view :class=\"['chat-bubble', item.role === 'user' ? 'user-bubble' : 'bot-bubble']\">\r\n          <text>{{ item.content }}</text>\r\n          <view v-if=\"item.role === 'bot' && item.thinking\" class=\"thinking\">\r\n            <text>思考中...</text>\r\n          </view>\r\n        </view>\r\n      </view>\r\n    </scroll-view>\r\n\r\n    <!-- 输入框 -->\r\n    <view class=\"input-container\">\r\n      <input\r\n        v-model=\"inputMessage\"\r\n        class=\"input-box\"\r\n        placeholder=\"请输入消息\"\r\n        @confirm=\"sendMessage\"\r\n      />\r\n      <button class=\"send-button\" @click=\"sendMessage\">发送</button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script lang=\"uts\">\r\nexport default {\r\n  data() {\r\n    return {\r\n      inputMessage: \"\", // 用户输入的消息\r\n      chatList: [] // 聊天记录\r\n    };\r\n  },\r\n  methods: {\r\n    // 发送消息\r\n    sendMessage() {\r\n      if (!this.inputMessage.trim()) {\r\n        uni.showToast({\r\n          title: \"消息不能为空\",\r\n          icon: \"none\"\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 将用户消息添加到聊天记录\r\n      this.chatList.push({ role: \"user\", content: this.inputMessage });\r\n      this.inputMessage = \"\"; // 清空输入框\r\n\r\n      // 添加“思考中...”状态\r\n      this.chatList.push({ role: \"bot\", content: \"\", thinking: true });\r\n\r\n      // 调用接口获取回复\r\n      this.getBotReply();\r\n    },\r\n\r\n    // 调用接口获取回复\r\n    async getBotReply() {\r\n      try {\r\n        const response = await uni.request({\r\n          url: \"http://47.103.73.26/api/chat\", // 替换为你的接口地址\r\n          method: \"POST\",\r\n          data: {\r\n            content: this.chatList[this.chatList.length - 2]?.content // 发送最后一条用户消息\r\n          }\r\n        });\r\n\r\n        if (response.statusCode === 200) {\r\n          // 假设接口返回的数据在 response.data 中\r\n          const botMessage = response.data.choices[0]?.message.content || \"我不知道该说什么\";\r\n\r\n          // 更新“思考中...”状态为实际回复\r\n          this.chatList[this.chatList.length - 1] = {\r\n            role: \"bot\",\r\n            content: botMessage,\r\n            thinking: false\r\n          };\r\n        } else {\r\n          this.chatList[this.chatList.length - 1] = {\r\n            role: \"bot\",\r\n            content: \"请求失败，请重试\",\r\n            thinking: false\r\n          };\r\n        }\r\n      } catch (error) {\r\n        this.chatList[this.chatList.length - 1] = {\r\n          role: \"bot\",\r\n          content: \"网络错误，请检查网络连接\",\r\n          thinking: false\r\n        };\r\n        uni.__f__('error','at pages/chat/index.uvue:92',\"请求失败：\", error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  padding: 10px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.chat-list {\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.chat-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.chat-bubble {\r\n  max-width: 70%;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  position: relative;\r\n}\r\n\r\n.user-bubble {\r\n  align-self: flex-end;\r\n  background-color: #007aff;\r\n  color: #fff;\r\n}\r\n\r\n.bot-bubble {\r\n  align-self: flex-start;\r\n  background-color: #fff;\r\n  color: #333;\r\n  border: 1px solid #ddd;\r\n}\r\n\r\n.thinking {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n.input-box {\r\n  flex: 1;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  margin-right: 10px;\r\n}\r\n\r\n.send-button {\r\n  padding: 10px 20px;\r\n  background-color: #007aff;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 5px;\r\n}\r\n</style>","import MiniProgramPage from 'D:/code/lili-cat-fe/pages/chat/index.uvue'\nwx.createPage(MiniProgramPage)"],"names":["defineComponent","uni"],"mappings":";;AA4BA,MAAA,YAAeA,8BAAA;AAAA,EACb,OAAI;AACF,WAAO;AAAA,MACL,cAAc;AAAA,MACd,UAAU,CAAG;AAAA;AAAA;EAEhB;AAAA,EACD,SAAS;AAAA;AAAA,IAEP,cAAW;AACT,UAAI,CAAC,KAAK,aAAa,QAAQ;AAC7BC,sBAAAA,MAAI,UAAU;AAAA,UACZ,OAAO;AAAA,UACP,MAAM;AAAA,QACP,CAAA;AACD,eAAM;AAAA,MACR;AAGA,WAAK,SAAS,KAAK,EAAE,MAAM,QAAQ,SAAS,KAAK,aAAa,CAAC;AAC/D,WAAK,eAAe;AAGpB,WAAK,SAAS,KAAK,EAAE,MAAM,OAAO,SAAS,IAAI,UAAU,KAAK,CAAC;AAG/D,WAAK,YAAW;AAAA,IACjB;AAAA;AAAA,IAGK,cAAW;;;AACf,YAAI;AACF,gBAAM,WAAW,MAAMA,cAAG,MAAC,QAAQ;AAAA,YACjC,KAAK;AAAA,YACL,QAAQ;AAAA,YACR,MAAM,IAAA,cAAA;AAAA,cACJ,UAAS,KAAA,KAAK,SAAS,KAAK,SAAS,SAAS,CAAC,OAAG,QAAA,OAAA,SAAA,SAAA,GAAA;AAAA;AAAA,aACpD;AAAA,UACD,CAAA;AAED,cAAI,SAAS,eAAe,KAAK;AAE/B,kBAAM,oBAAa,SAAS,KAAK,QAAQ,CAAC,OAAG,QAAA,OAAA,SAAA,SAAA,GAAA,QAAQ,YAAW;AAGhE,iBAAK,SAAS,KAAK,SAAS,SAAS,CAAC,IAAI;AAAA,cACxC,MAAM;AAAA,cACN,SAAS;AAAA,cACT,UAAU;AAAA;UAEZ,OAAK;AACL,iBAAK,SAAS,KAAK,SAAS,SAAS,CAAC,IAAI;AAAA,cACxC,MAAM;AAAA,cACN,SAAS;AAAA,cACT,UAAU;AAAA;UAEd;AAAA,QACA,SAAO,OAAO;AACd,eAAK,SAAS,KAAK,SAAS,SAAS,CAAC,IAAI;AAAA,YACxC,MAAM;AAAA,YACN,SAAS;AAAA,YACT,UAAU;AAAA;AAEZA,wBAAG,MAAC,MAAM,SAAQ,+BAA8B,SAAS,KAAK;AAAA,QAChE;AAAA;IACF;AAAA,EACF;CACD;;;;;;;;;;;;;;;;;;;;AC9FD,GAAG,WAAW,eAAe;"}